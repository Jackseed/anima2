{"version":3,"sources":["./src/app/auth/_state/user.service.ts","./src/environments/environment.ts","./src/app/games/games.module.ts","./src/app/board/tiles/tiles.module.ts","./src/app/games/_state/index.ts","./src/app/games/guards/active-game.guard.ts","./src/app/board/tiles/_state/tile.service.ts","./src/app/board/tiles/_state/tile.store.ts","./src/app/games/_state/game.query.ts","./src/app/auth/_state/index.ts","./src/app/board/tiles/_state/tile.query.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/board/tiles/_state/index.ts","./src/app/games/_state/game.service.ts","./src/app/games/guards/games.guard.ts","./src/app/auth/auth.module.ts","./src/app/app.module.ts","./src/app/auth/_state/user.store.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/board/board-view/board-view.component.ts","./src/app/board/board-view/board-view.component.html","./src/app/auth/guards/active-user.guard.ts","./src/app/games/homepage/homepage.component.ts","./src/app/games/homepage/homepage.component.html","./src/app/auth/_state/user.model.ts","./src/app/games/_state/game.store.ts","./src/app/board/board.module.ts","./src/app/board/tiles/_state/tile.model.ts","./src/app/auth/_state/user.query.ts","./src/app/app-routing.module.ts","./src/app/games/_state/game.model.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { CollectionConfig, CollectionService } from 'akita-ng-fire';\nimport { UserStore, UserState } from './user.store';\nimport { first } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { createUser } from './user.model';\n\n@Injectable({ providedIn: 'root' })\n@CollectionConfig({ path: 'users' })\nexport class UserService extends CollectionService<UserState> {\n  constructor(\n    store: UserStore,\n    private afAuth: AngularFireAuth,\n    private router: Router\n  ) {\n    super(store);\n  }\n\n  async anonymousLogin() {\n    await this.afAuth.signInAnonymously();\n    const user = await this.afAuth.authState.pipe(first()).toPromise();\n    if (user) {\n      this.setUser(user.uid);\n    }\n    this.router.navigate(['/home']);\n  }\n\n  private setUser(id: string) {\n    const user = createUser({ id });\n    this.db.collection(this.currentPath).doc(id).set(user);\n  }\n}\n","export const environment = {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyBaG7KhkupOxiJ5pF15ahECIW2NYQtx8vo',\n    authDomain: 'anima-f51c8.firebaseapp.com',\n    projectId: 'anima-f51c8',\n    storageBucket: 'anima-f51c8.appspot.com',\n    messagingSenderId: '967539986622',\n  },\n};\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomepageComponent } from './homepage/homepage.component';\n\n\n\n@NgModule({\n  declarations: [HomepageComponent],\n  imports: [\n    CommonModule\n  ]\n})\nexport class GamesModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule],\n})\nexport class TilesModule {}\n","export * from './game.model';\nexport * from './game.query';\nexport * from './game.service';\nexport * from './game.store';\n","import { Injectable } from '@angular/core';\nimport { GameService, GameState } from '../_state';\nimport { CollectionGuard, CollectionGuardConfig } from 'akita-ng-fire';\nimport { ActivatedRouteSnapshot } from '@angular/router';\n\n@Injectable({ providedIn: 'root' })\n@CollectionGuardConfig({ awaitSync: true })\nexport class ActiveGameGuard extends CollectionGuard<GameState> {\n  constructor(service: GameService) {\n    super(service);\n  }\n\n  // Sync and set active\n  sync(next: ActivatedRouteSnapshot) {\n    return this.service.syncActive({ id: next.params.id });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CollectionConfig, CollectionService } from 'akita-ng-fire';\nimport { cols, GameQuery, max } from 'src/app/games/_state';\nimport {\n  createTile,\n  forestIds,\n  islandIds,\n  mountainsIds,\n  plainsIds,\n  rockiesIds,\n  swampsIds,\n  Tile,\n} from './tile.model';\nimport { TileStore, TileState } from './tile.store';\n\n@Injectable({ providedIn: 'root' })\n@CollectionConfig({ path: 'tiles' })\nexport class TileService extends CollectionService<TileState> {\n  constructor(store: TileStore, private gameQuery: GameQuery) {\n    super(store);\n  }\n\n  public setTiles() {\n    const tiles: Tile[] = [];\n    const game = this.gameQuery.getActive();\n\n    if (game) {\n      for (let i = 0; i < cols; i++) {\n        for (let j = 0; j < cols; j++) {\n          const tileId = j + cols * i;\n          if (tileId < max) {\n            let type:\n              | 'rockies'\n              | 'mountains'\n              | 'island'\n              | 'plains'\n              | 'swamps'\n              | 'forest'\n              | 'blank' = 'blank';\n            if (islandIds.includes(tileId)) type = 'island';\n            if (mountainsIds.includes(tileId)) type = 'mountains';\n            if (rockiesIds.includes(tileId)) type = 'rockies';\n            if (plainsIds.includes(tileId)) type = 'plains';\n            if (swampsIds.includes(tileId)) type = 'swamps';\n            if (forestIds.includes(tileId)) type = 'forest';\n            const tile = createTile(tileId, j, i, type);\n            console.log(tile);\n            tiles.push(tile);\n          }\n        }\n      }\n\n      this.store.set(tiles);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  EntityState,\n  EntityStore,\n  StoreConfig,\n  ActiveState,\n} from '@datorama/akita';\nimport { Tile } from './tile.model';\n\nexport interface TileState\n  extends EntityState<Tile, string>,\n    ActiveState<string> {}\n\n@Injectable({ providedIn: 'root' })\n@StoreConfig({ name: 'tile' })\nexport class TileStore extends EntityStore<TileState> {\n  constructor() {\n    super();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { QueryEntity } from '@datorama/akita';\nimport { GameStore, GameState } from './game.store';\n\n@Injectable({ providedIn: 'root' })\nexport class GameQuery extends QueryEntity<GameState> {\n\n  constructor(protected store: GameStore) {\n    super(store);\n  }\n\n}\n","export * from './user.model';\nexport * from './user.query';\nexport * from './user.service';\nexport * from './user.store';\n","import { Injectable } from '@angular/core';\nimport { QueryEntity } from '@datorama/akita';\nimport { TileStore, TileState } from './tile.store';\n\n@Injectable({ providedIn: 'root' })\nexport class TileQuery extends QueryEntity<TileState> {\n\n  constructor(protected store: TileStore) {\n    super(store);\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'anima2';\n}\n","<router-outlet></router-outlet>\n","export * from './tile.model';\nexport * from './tile.query';\nexport * from './tile.service';\nexport * from './tile.store';\n","import { Injectable } from '@angular/core';\nimport { CollectionConfig, CollectionService } from 'akita-ng-fire';\nimport { createGame } from './game.model';\nimport { GameStore, GameState } from './game.store';\n\n@Injectable({ providedIn: 'root' })\n@CollectionConfig({ path: 'games' })\nexport class GameService extends CollectionService<GameState> {\n  constructor(store: GameStore) {\n    super(store);\n  }\n\n  createNewGame(name: string) {\n    const id = this.db.createId();\n    const game = createGame({ id, name });\n    // Create the game\n    this.collection.doc(id).set(game);\n    return id;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { GameService, GameState } from '../_state';\nimport { CollectionGuard } from 'akita-ng-fire';\n\n@Injectable({ providedIn: 'root' })\nexport class GameGuard extends CollectionGuard<GameState> {\n  constructor(service: GameService) {\n    super(service);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [CommonModule],\n})\nexport class AuthModule {}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { AkitaNgDevtools } from '@datorama/akita-ngdevtools';\nimport { environment } from '../environments/environment';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AkitaNgRouterStoreModule } from '@datorama/akita-ng-router-store';\nimport { GamesModule } from './games/games.module';\nimport { TilesModule } from './board/tiles/tiles.module';\nimport { AuthModule } from './auth/auth.module';\nimport { BoardModule } from './board/board.module';\nimport { GameGuard } from './games/guards/games.guard';\nimport { ActiveGameGuard } from './games/guards/active-game.guard';\nimport { ActiveUserGuard } from './auth/guards/active-user.guard';\nimport { AngularFireAuthGuard } from '@angular/fire/auth-guard';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FlexLayoutModule,\n    AkitaNgRouterStoreModule,\n    AngularFirestoreModule,\n    GamesModule,\n    TilesModule,\n    AuthModule,\n    BoardModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    environment.production ? [] : AkitaNgDevtools.forRoot(),\n  ],\n  providers: [\n    AngularFireAuthGuard,\n    ActiveUserGuard,\n    GameGuard,\n    ActiveGameGuard,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { EntityState, EntityStore, StoreConfig, ActiveState } from '@datorama/akita';\nimport { User } from './user.model';\n\nexport interface UserState extends EntityState<User, string>, ActiveState<string> {}\n\n@Injectable({ providedIn: 'root' })\n@StoreConfig({ name: 'user' })\nexport class UserStore extends EntityStore<UserState> {\n\n  constructor() {\n    super();\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../_state/user.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  constructor(private service: UserService) {}\n\n  ngOnInit(): void {}\n  public async logIn() {\n    await this.service.anonymousLogin();\n  }\n}\n","<div fxLayout=\"column\" fxFill fxLayoutAlign=\"center center\">\n  <h1>ANIMA</h1>\n  <button mat-button color='warn' (click)=\"logIn()\">\n    <span>Enter</span>\n  </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Tile, TileQuery, TileService } from '../tiles/_state';\n\n@Component({\n  selector: 'app-board-view',\n  templateUrl: './board-view.component.html',\n  styleUrls: ['./board-view.component.scss'],\n})\nexport class BoardViewComponent implements OnInit {\n  public tiles$: Observable<Tile[]>;\n\n  constructor(private tileQuery: TileQuery, private tileService: TileService) {}\n\n  ngOnInit(): void {\n    this.tileService.setTiles();\n    this.tiles$ = this.tileQuery.selectAll();\n  }\n}\n","<div class=\"main\">\n  <div class=\"container\">\n    <div\n      *ngFor=\"let tile of tiles$ | async\"\n      [ngClass]=\"{\n        blank: tile.type === 'blank',\n        island: tile.type === 'island',\n        mountains: tile.type === 'mountains',\n        rockies: tile.type === 'rockies',\n        plains: tile.type === 'plains',\n        swamps: tile.type === 'swamps',\n        forest: tile.type === 'forest'\n      }\"\n    ></div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { UserState, UserService, UserStore } from '../_state';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { CollectionGuardConfig, CollectionGuard } from 'akita-ng-fire';\nimport { switchMap, tap } from 'rxjs/operators';\n\n@Injectable({ providedIn: 'root' })\n@CollectionGuardConfig({ awaitSync: true })\nexport class ActiveUserGuard extends CollectionGuard<UserState> {\n  constructor(\n    service: UserService,\n    private store: UserStore,\n    private afAuth: AngularFireAuth\n  ) {\n    super(service);\n  }\n\n  sync() {\n    return this.afAuth.user.pipe(\n      tap((user) => this.store.setActive(user.uid)),\n      switchMap((_) => this.service.syncCollection())\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { GameService } from '../_state/game.service';\n\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.scss'],\n})\nexport class HomepageComponent implements OnInit {\n  constructor(private router: Router, private gameService: GameService) {}\n\n  ngOnInit(): void {}\n\n  public async playNow() {\n    const gameId = this.gameService.createNewGame('');\n    this.router.navigate([`/games/${gameId}`]);\n  }\n}\n","<button (click)=\"playNow()\">Play</button>\n","export interface User {\n  id: string;\n  name?: string;\n  gamePlayed?: string[];\n  matchPlayed?: number;\n  matchWon?: number;\n}\n\nexport function createUser(params: Partial<User>) {\n  return {\n    id: params.id,\n    gamePlayed: [],\n    matchPlayed: 0,\n    matchWon: 0,\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { EntityState, EntityStore, StoreConfig, ActiveState } from '@datorama/akita';\nimport { Game } from './game.model';\n\nexport interface GameState extends EntityState<Game, string>, ActiveState<string> {}\n\n@Injectable({ providedIn: 'root' })\n@StoreConfig({ name: 'game' })\nexport class GameStore extends EntityStore<GameState> {\n\n  constructor() {\n    super();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BoardViewComponent } from './board-view/board-view.component';\n\n@NgModule({\n  declarations: [BoardViewComponent],\n  imports: [CommonModule],\n})\nexport class BoardModule {}\n","import { cols } from 'src/app/games/_state';\n\nexport interface Tile {\n  id?: number;\n  x?: number;\n  y?: number;\n  type?:\n    | 'rockies'\n    | 'mountains'\n    | 'island'\n    | 'plains'\n    | 'swamps'\n    | 'forest'\n    | 'blank';\n}\n\nexport const islandCoordinates: [x: number, y: number][] = [\n  [8, 2],\n  [7, 3],\n  [8, 3],\n];\nexport const islandIds: number[] = islandCoordinates.map(\n  (coordinates) => coordinates[0] + coordinates[1] * cols\n);\n\nexport const mountainsCoordinates: [x: number, y: number][] = [\n  [5, 5],\n  [6, 5],\n  [5, 6],\n  [6, 6],\n  [7, 6],\n  [5, 7],\n  [6, 7],\n];\nexport const mountainsIds: number[] = mountainsCoordinates.map(\n  (coordinates) => coordinates[0] + coordinates[1] * cols\n);\n\nexport const rockiesCoordinates: [x: number, y: number][] = [\n  [4, 3],\n  [5, 3],\n  [3, 4],\n  [4, 4],\n  [6, 4],\n  [3, 5],\n  [3, 4],\n];\nexport const rockiesIds: number[] = rockiesCoordinates.map(\n  (coordinates) => coordinates[0] + coordinates[1] * cols\n);\n\nexport const plainsCoordinates: [x: number, y: number][] = [\n  [5, 8],\n  [6, 8],\n  [7, 8],\n  [5, 9],\n  [6, 9],\n  [7, 9],\n  [5, 10],\n  [6, 10],\n  [7, 10],\n];\nexport const plainsIds: number[] = plainsCoordinates.map(\n  (coordinates) => coordinates[0] + coordinates[1] * cols\n);\n\nexport const swampsCoordinates: [x: number, y: number][] = [\n  [8, 6],\n  [9, 6],\n  [7, 7],\n  [8, 7],\n  [8, 8],\n  [9, 8],\n];\nexport const swampsIds: number[] = swampsCoordinates.map(\n  (coordinates) => coordinates[0] + coordinates[1] * cols\n);\n\nexport const forestCoordinates: [x: number, y: number][] = [\n  [4, 6],\n  [2, 7],\n  [3, 7],\n  [4, 7],\n  [2, 8],\n  [3, 8],\n  [2, 9],\n  [3, 9],\n];\nexport const forestIds: number[] = forestCoordinates.map(\n  (coordinates) => coordinates[0] + coordinates[1] * cols\n);\n\nexport function createTile(\n  id: number,\n  x: number,\n  y: number,\n  type:\n    | 'rockies'\n    | 'mountains'\n    | 'island'\n    | 'plains'\n    | 'swamps'\n    | 'forest'\n    | 'blank',\n  params?: Partial<Tile>\n): Tile {\n  return {\n    id,\n    x,\n    y,\n    type,\n    ...params,\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { QueryEntity } from '@datorama/akita';\nimport { UserStore, UserState } from './user.store';\n\n@Injectable({ providedIn: 'root' })\nexport class UserQuery extends QueryEntity<UserState> {\n\n  constructor(protected store: UserStore) {\n    super(store);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './auth/login/login.component';\nimport { HomepageComponent } from './games/homepage/homepage.component';\nimport {\n  AngularFireAuthGuard,\n  redirectUnauthorizedTo,\n} from '@angular/fire/auth-guard';\nimport { BoardViewComponent } from './board/board-view/board-view.component';\nimport { GameGuard } from './games/guards/games.guard';\nimport { ActiveUserGuard } from './auth/guards/active-user.guard';\nimport { ActiveGameGuard } from './games/guards/active-game.guard';\n\nconst redirectUnauthorizedToLogin = () => redirectUnauthorizedTo(['welcome']);\n\nconst routes: Routes = [\n  {\n    path: 'welcome',\n    component: LoginComponent,\n  },\n  {\n    path: 'home',\n    canActivate: [AngularFireAuthGuard, GameGuard, ActiveUserGuard],\n    data: { authGuardPipe: redirectUnauthorizedToLogin },\n    component: HomepageComponent,\n  },\n  {\n    path: 'games/:id',\n    canActivate: [\n      ActiveGameGuard,\n      AngularFireAuthGuard,\n      GameGuard,\n      ActiveUserGuard,\n    ],\n    data: { authGuardPipe: redirectUnauthorizedToLogin },\n    component: BoardViewComponent,\n  },\n  {\n    path: '',\n    redirectTo: '/home',\n    pathMatch: 'full',\n  },\n  {\n    path: '**',\n    redirectTo: '/home',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","export interface Game {\n  id?: string;\n  name?: string;\n}\n\nexport const cols = 12;\nexport const lines = 13;\nexport const max = cols * lines;\n\nexport function createGame(params: Partial<Game> = {}): Game {\n  return {\n    id: params.id,\n    name: params.name,\n    ...params,\n  };\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}